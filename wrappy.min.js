/*
 * wrappy.js - A function / method Promise wrapper utility for JavaScript
 * 
 * http://davidshariff.github.com/wrappy
 *
 * Copyright (c) 2014 David Shariff
 * MIT licensed.
 */
(function(){"use strict";function t(){return function(){var e={};e.promise=new Promise(function(t,n){e.resolve=t;e.reject=n});return e}()}function n(e,n){return function(){var i=t(),s=Array.prototype.slice.call(arguments);s.push(i);e.apply(n||null,s);return i.promise}}var e;if(typeof exports!=="undefined"){e=exports}else{e=this.wrappy={}}e.wrapMethod=function(e,t){if(typeof t!=="string"||!e){throw new Error("Error: Need to pass base object that the method name belongs to.")}e[t]=n(e[t],e)};e.wrapFunction=function(e){if(typeof e!=="function"){throw new Error("Error: Expected argument to be a function.")}return n(e)}}).call(this)
